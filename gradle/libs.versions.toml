[versions]
junit = "4.13.2"
commons_cli = "1.5.0"
commons_codec = "1.15"
commons_lang = "3.14.0"
commons_pool = "2.11.1"
commons_logging = "1.2"
commons_text = "1.12.0"
commons_validator = "1.9.0"
icu4j = { require = "[70,73.2[", prefer = "72.1" }
lombok = "1.18.22"
json = "20231013"
logback = "1.3.14"
slf4j = { strictly = "[2.0.7, 2.1[", prefer = "2.0.7" }
jaxb = "2.3.0"
annotations = "20.1.0"
jackson = "2.14.2"
morfologik = "2.1.9"
lucene = "8.11.3"
guava = "32.1.2-jre"
openregex = "1.1.1"
indriya = "1.3"
language_detector = "0.6"
hunspell = "2.1.2"
javax_activation_api = "1.2.0"
javax_annotation_api = "1.3.2"
opennlp = "1.5"
grpc = "1.56.1"
resilience4j = "1.7.1"

[libraries]
javax-activation-api = {group = "javax.activation", name = "javax.activation-api", version.ref = "javax_activation_api"}
javax-annotation-api = {group = "javax.annotation", name = "javax.annotation-api", version.ref = "javax_annotation_api"}
junit4 = {group = "junit", name = "junit", version.ref = "junit"}
commons-cli = {group = "commons-cli", name = "commons-cli", version.ref = "commons_cli"}
commons-codec = {group = "commons-codec", name = "commons-codec",  version.ref = "commons_codec"}
commons-lang = {group = "org.apache.commons", name = "commons-lang3", version.ref = "commons_lang"}
commons-pool = {group = "org.apache.commons", name = "commons-pool2", version.ref = "commons_pool"}
commons-logging = {group = "commons-logging", name = "commons-logging", version.ref = "commons_logging"}
commons-text = {group = "org.apache.commons", name = "commons-text", version.ref = "commons_text"}
commons-validator = {group = "commons-validator", name = "commons-validator", version.ref = "commons_validator"}
lombok = {group = "org.projectlombok", name = "lombok", version.ref = "lombok"}
icu4j = {group ="com.ibm.icu", name ="icu4j", version.ref = "icu4j"}
json = {group = "org.json", name ="json", version.ref = "json"}
logback-classic = {group = "ch.qos.logback", name = "logback-classic", version.ref = "logback"}
slf4j-api = {group = "org.slf4j", name = "slf4j-api", version.ref = "slf4j"}
jaxb-api = {group = "javax.xml.bind", name = "jaxb-api", version.ref = "jaxb" }
jaxb-runtime = {group = "org.glassfish.jaxb", name = "jaxb-runtime", version.ref = "jaxb"}
jetbrains-annotations = {group = "org.jetbrains", name = "annotations", version.ref = "annotations"}
jackson-databind = {group ="com.fasterxml.jackson.core", name = "jackson-databind", version.ref = "jackson"}
guava = {group = "com.google.guava", name = "guava", version.ref = "guava"}

grpc-netty-shaded = {group = "io.grpc", name = "grpc-netty-shaded", version.ref = "grpc"}
grpc-protobuf = {group = "io.grpc", name = "grpc-protobuf", version.ref = "grpc"}
grpc-stub = {group = "io.grpc", name = "grpc-stub", version.ref = "grpc"}
opentelemetry-api = {group = "io.opentelemetry", name = "opentelemetry-api", version = "1.26.0"}
opentelemetry-semconv = {group = "io.opentelemetry", name = "opentelemetry-semconv", version = "1.26.0-alpha"}

english-pos-dict = {group = "org.languagetool", name = "english-pos-dict", version = "0.3"}
catalan-pos-dict = {group = "org.softcatala", name = "catalan-pos-dict", version = "2.22"}
french-pos-dict = { group = "org.languagetool", name = "french-pos-dict", version = "0.5"}
german-pos-dict = {group = "de.danielnaber", name = "german-pos-dict", version = "1.2.4"}
jwordsplitter = {group = "de.danielnaber", name = "jwordsplitter", version = "4.7"}
portuguese-pos-dict = { group = "org.languagetool", name = "portuguese-pos-dict", version = "0.3"}
spanish-pos-dict = {group = "org.softcatala", name = "spanish-pos-dict", version = "2.2"}
ga-dicts = {group = "io.github.jimregan", name = "languagetool-ga-dicts", version = "0.02"}
dutch-pos-dict = {group = "org.languagetool", name = "dutch-pos-dict", version = "0.1"}
ukrainian-lt = {group = "ua.net.nlp", name = "morfologik-ukrainian-lt", version = "6.4.4"}
trove4j = {group = "org.jetbrains.intellij.deps", name = "trove4j", version = "1.0.20200330"}
openregex = {group = "edu.washington.cs.knowitall", name = "openregex", version.ref = "openregex"}
indriya = {group = "tech.units", name = "indriya", version.ref = "indriya"}
hankcs = {group = "com.hankcs", name = "aho-corasick-double-array-trie", version = "1.2.2"}
hanlp = {group = "com.hankcs", name = "hanlp", version = "portable-1.8.2"}

language-detector = {group = "com.optimaize.languagedetector", name = "language-detector", version.ref = "language_detector"}
dumonts-hunspell = {group = "com.gitlab.dumonts", name = "hunspell", version.ref = "hunspell"}

morfologik-fsa = {group = "org.carrot2", name = "morfologik-fsa", version.ref = "morfologik"}
morfologik-builders = {group = "org.carrot2", name = "morfologik-fsa-builders", version.ref = "morfologik"}
morfologik-speller = {group = "org.carrot2", name = "morfologik-speller", version.ref = "morfologik"}
morfologik-stemming = {group = "org.carrot2", name = "morfologik-stemming", version.ref = "morfologik"}
lucene-backward-codecs = {group = "org.apache.lucene", name = "lucene-backward-codecs", version.ref = "lucene"}
lucene-core = {group = "org.apache.lucene", name = "lucene-core", version.ref = "lucene"}
opennlp-chunk-models = {group = "edu.washington.cs.knowitall", name ="opennlp-chunk-models", version.ref = "opennlp"}
opennlp-postag-models = {group = "edu.washington.cs.knowitall", name ="opennlp-postag-models", version.ref = "opennlp"}
opennlp-tokenize-models = {group = "edu.washington.cs.knowitall", name ="opennlp-tokenize-models", version.ref = "opennlp"}
opennlp-tools = {group = "org.apache.opennlp", name = "opennlp-tools", version = "1.9.4"}

resilience4j-circuitbreaker = {group = "io.github.resilience4j", name = "resilience4j-circuitbreaker", version.ref = "resilience4j"}
resilience4j-micrometer = {group = "io.github.resilience4j", name = "resilience4j-micrometer", version.ref = "resilience4j"}

[plugins]
nexus-publish = {id = "io.github.gradle-nexus.publish-plugin", version = "2.0.0"}
